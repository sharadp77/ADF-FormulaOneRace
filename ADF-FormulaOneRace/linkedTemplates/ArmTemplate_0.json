{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-FormulaOneRace"
		},
		"LS_AZURE_POSTGREY_SQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AZURE_POSTGREY_SQL'"
		},
		"LS_formulaoneraceadlsgen2_ADLS_GEN2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_formulaoneraceadlsgen2_ADLS_GEN2'"
		},
		"LS_formulaoneraceadlsgen2_ADLS_GEN2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://formulaoneraceadlsgen2.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZURE_POSTGREY_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('LS_AZURE_POSTGREY_SQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_formulaoneraceadlsgen2_ADLS_GEN2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_formulaoneraceadlsgen2_ADLS_GEN2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_formulaoneraceadlsgen2_ADLS_GEN2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_POSTGREYS_SQL_DATABASE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZURE_POSTGREY_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "formulaonerace_db",
					"table": "formulaone_metadata_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZURE_POSTGREY_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_DRIVERS_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_formulaoneraceadlsgen2_ADLS_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Drivers.json",
						"folderPath": {
							"value": "@concat('Drivers/',formatDateTime(utcnow(),'yyyyMMdd'))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_formulaoneraceadlsgen2_ADLS_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_RACES_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_formulaoneraceadlsgen2_ADLS_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(item().season,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Races/',formatDateTime(utcnow(),'yyyyMMdd'))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_formulaoneraceadlsgen2_ADLS_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_RACES_RESULTS_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_formulaoneraceadlsgen2_ADLS_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"season": {
						"type": "String"
					},
					"Round": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().season,'_',dataset().Round,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Results/',formatDateTime(utcnow(),'yyyyMMdd'))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_formulaoneraceadlsgen2_ADLS_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_RANDOM_DATASET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_formulaoneraceadlsgen2_ADLS_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_formulaoneraceadlsgen2_ADLS_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_SEASONS_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_formulaoneraceadlsgen2_ADLS_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Seasons.json",
						"folderPath": {
							"value": "@concat('Seasons/',formatDateTime(utcnow(),'yyyyMMdd'))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_formulaoneraceadlsgen2_ADLS_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SOURCE_RANDOM_DATASET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_formulaoneraceadlsgen2_ADLS_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_formulaoneraceadlsgen2_ADLS_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SOURCE_TEMP_TXT_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_formulaoneraceadlsgen2_ADLS_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "template.txt",
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_formulaoneraceadlsgen2_ADLS_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FAILED_NOTIFICATION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SOURCE_RANDOM_DATASET",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@pipeline().parameters.Randomfilename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_RANDOM_DATASET",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.Randomfilename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Randomfilename": {
						"type": "string",
						"defaultValue": "season.csv"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_RANDOM_DATASET')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_RANDOM_DATASET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INGEST_DRIVERS_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_Web1",
						"description": "This activity will get Drivers data from API",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "act_set_var_start_time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "http://ergast.com/api/f1/drivers.json"
						}
					},
					{
						"name": "act_Set _limit_variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "drivers_limit",
							"value": {
								"value": "@activity('act_Web1').output.MRData.total",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "act_Set _limit_variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('http://ergast.com/api/f1/drivers.json?limit=',variables('drivers_limit'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Set_Drivers_data_variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_Web2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "drivers_data",
							"value": {
								"value": "@{activity('act_Web2').output.MRData.DriverTable.Drivers}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Copy_drivers_data_to_bronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "act_Set_Drivers_data_variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "my_column",
										"value": {
											"value": "@variables('drivers_data')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "my_column",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SOURCE_TEMP_TXT_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_DRIVERS_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "act_insert_lookup_metadata",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "act_Set_Drivers_data_variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "INSERT INTO formulaonerace_db.formulaone_metadata_table (job_id,job_name,task_name,status,start_time) VALUES ('@{formatDateTime(variables('start_time'),'yyyyMMddHHmmss')}','PL_INGEST_API_DATA','DRIVERS_API','In-Progress','@{variables('start_time')}');\n\nselect job_id from formulaonerace_db.formulaone_metadata_table;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_POSTGREYS_SQL_DATABASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "act_set_var_start_time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@utcNow('yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_lookup_update_season_metadata_entry",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "act_Copy_drivers_data_to_bronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "UPDATE formulaonerace_db.formulaone_metadata_table\nSET status='success',\n    end_time='@{utcNow('yyyy-MM-dd HH:mm:ss')}'\nwhere job_id='@{formatDateTime(variables('start_time'),'yyyyMMddHHmmss')}' and task_name='DRIVERS_API';\n\nselect job_id from formulaonerace_db.formulaone_metadata_table;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_POSTGREYS_SQL_DATABASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "act_lookup_update_season_metadata_entry_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "act_Copy_drivers_data_to_bronze",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "UPDATE formulaonerace_db.formulaone_metadata_table\nSET status='failed',\n    end_time='@{utcNow('yyyy-MM-dd HH:mm:ss')}'\nwhere job_id='@{formatDateTime(variables('start_time'),'yyyyMMddHHmmss')}' and task_name='DRIVERS_API';\n\nselect job_id from formulaonerace_db.formulaone_metadata_table;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_POSTGREYS_SQL_DATABASE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"drivers_limit": {
						"type": "String"
					},
					"drivers_data": {
						"type": "String"
					},
					"start_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "API_Ingestion_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_TEMP_TXT_DATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_DRIVERS_DATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_POSTGREYS_SQL_DATABASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INGEST_RESULTS_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_Web1",
						"description": "This activity will get races data from API to iterate season and round wise to get Results data",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('http://ergast.com/api/f1/',pipeline().parameters.year_from_races_pl,'.json')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_ForEach_roundwise_iteration",
						"description": "This activity will iterate through each round of particular season",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "act_Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('act_Web1').output.MRData.RaceTable.Races",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "act_Web2",
									"description": "This activity will get data from races results API",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat('http://ergast.com/api/f1/',pipeline().parameters.year_from_races_pl,'/',item().round,'/results.json')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_Set_Races_Results_data_variable",
									"description": "This activity will save races Results data into races_results_data variable which is taken from API",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "act_Web2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "race_results_data",
										"value": {
											"value": "@{activity('act_Web2').output.MRData.RaceTable.Races}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_Copy_races_results_data",
									"description": "This activity will copy races results data to bronze container in JSON file format",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "act_Set_Races_Results_data_variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "my_column",
													"value": {
														"value": "@variables('race_results_data')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "my_column",
														"type": "String"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SOURCE_TEMP_TXT_DATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINK_RACES_RESULTS_DATA",
											"type": "DatasetReference",
											"parameters": {
												"season": {
													"value": "@pipeline().parameters.year_from_races_pl",
													"type": "Expression"
												},
												"Round": {
													"value": "@item().round",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"year_from_races_pl": {
						"type": "string"
					}
				},
				"variables": {
					"race_results_data": {
						"type": "String"
					}
				},
				"folder": {
					"name": "API_Ingestion_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_TEMP_TXT_DATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_RACES_RESULTS_DATA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INGEST_SEASON_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will ingest season data from ergast API in JSON file format",
				"activities": [
					{
						"name": "act_web1",
						"description": "This activity will get data from API",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "act_set_var_start_time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "http://ergast.com/api/f1/seasons.json"
						}
					},
					{
						"name": "act_set_limit_variable_value",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Limit",
							"value": {
								"value": "@activity('act_web1').output.MRData.total",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "act_set_limit_variable_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('http://ergast.com/api/f1/seasons.json?limit=',variables('Limit'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Set_variable_seasons_data",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_Web2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "seasons_data",
							"value": {
								"value": "@{activity('act_Web2').output.MRData.SeasonTable.Seasons}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Copy_seasons_data_to_bronze_layer",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "act_Set_variable_seasons_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "my_column",
										"value": {
											"value": "@variables('seasons_data')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "my_column",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SOURCE_TEMP_TXT_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_SEASONS_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "act_set_var_start_time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@utcNow('yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_insert_lookup_metadata",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "act_Set_variable_seasons_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "INSERT INTO formulaonerace_db.formulaone_metadata_table (job_id,job_name,task_name,status,start_time) VALUES ('@{formatDateTime(variables('start_time'),'yyyyMMddHHmmss')}','PL_INGEST_API_DATA','SEASON_API','In-Progress','@{variables('start_time')}');\n\nselect job_id from formulaonerace_db.formulaone_metadata_table;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_POSTGREYS_SQL_DATABASE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "act_lookup_update_season_metadata_entry",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "act_Copy_seasons_data_to_bronze_layer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "UPDATE formulaonerace_db.formulaone_metadata_table\nSET status='success',\n    end_time='@{utcNow('yyyy-MM-dd HH:mm:ss')}'\nwhere job_id='@{formatDateTime(variables('start_time'),'yyyyMMddHHmmss')}' and task_name='SEASON_API';\n\nselect job_id from formulaonerace_db.formulaone_metadata_table;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_POSTGREYS_SQL_DATABASE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "act_lookup_update_season_metadata_entry_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "act_Copy_seasons_data_to_bronze_layer",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "UPDATE formulaonerace_db.formulaone_metadata_table\nSET status='failed',\n    end_time='@{utcNow('yyyy-MM-dd HH:mm:ss')}'\nwhere job_id='@{formatDateTime(variables('start_time'),'yyyyMMddHHmmss')}' and task_name='SEASON_API';\n\nselect job_id from formulaonerace_db.formulaone_metadata_table;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_POSTGREYS_SQL_DATABASE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Limit": {
						"type": "String"
					},
					"seasons_data": {
						"type": "String"
					},
					"start_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "API_Ingestion_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_TEMP_TXT_DATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_SEASONS_DATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_POSTGREYS_SQL_DATABASE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INGEST_RACES_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "http://ergast.com/api/f1/seasons.json",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Set_seasons_limit_variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "seasons_limit",
							"value": {
								"value": "@activity('act_Web1').output.MRData.total",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "act_Set_seasons_limit_variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('http://ergast.com/api/f1/seasons.json?limit=',variables('seasons_limit'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_ForEach_season_iteration",
						"description": "This activity will iterate through each season",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "act_Web2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('act_Web2').output.MRData.SeasonTable.Seasons",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "act_Set_season_value_variable",
									"description": "This activity will save season value in variable to pass this value in child pipeline",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@item().season",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_Execute_Race_Result_Pipeline",
									"description": "This activity will run Race Results pipeline as child pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "act_Set_season_value_variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_INGEST_RESULTS_DATA",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"year_from_races_pl": {
												"value": "@variables('year')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "act_Web3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "act_Execute_Race_Result_Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat('http://ergast.com/api/f1/',item().season,'.json?limit=100')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_Set_Races_data_variable",
									"description": "This activity will write races data season wise in variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "act_Web3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "races_data",
										"value": {
											"value": "@{activity('act_Web3').output.MRData.RaceTable.Races}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_Copy_races_data_to_ bronze",
									"description": "This activity will save Races data taken from API to bronze container in JSON file format",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "act_Set_Races_data_variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "my_column",
													"value": {
														"value": "@variables('races_data')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "my_column",
														"type": "String"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SOURCE_TEMP_TXT_DATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINK_RACES_DATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"seasons_limit": {
						"type": "String"
					},
					"year": {
						"type": "String"
					},
					"races_data": {
						"type": "String"
					},
					"race_results_data": {
						"type": "String"
					}
				},
				"folder": {
					"name": "API_Ingestion_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_INGEST_RESULTS_DATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SOURCE_TEMP_TXT_DATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_RACES_DATA')]"
			]
		}
	]
}